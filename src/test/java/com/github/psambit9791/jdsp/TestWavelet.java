/*
 *
 *  * Copyright (c) 2020 Sambit Paul
 *  *
 *  * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *  *
 *  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *  *
 *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

package com.github.psambit9791.jdsp;


import com.github.psambit9791.jdsp.transform.Wavelet;
import org.apache.commons.math3.complex.Complex;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class TestWavelet {

    private double[] signal = {1.0003, -0.1876, -0.931 ,  0.5332,  0.7249, -0.8137, -0.4293,
            0.9693,  0.0711, -0.9737,  0.3371,  0.9089, -0.6114, -0.6335,
            0.8421,  0.2268, -1.1182, -0.0832,  0.8464, -0.4692, -0.7236,
            0.9668,  0.9045, -0.5044,  0.1777,  1.1745, -0.3053, -1.3719,
            -0.1669, -0.0787, -1.5103, -0.8144,  1.0282,  0.5865, -0.1208,
            1.309 ,  1.7476, -0.1137, -0.5778,  0.4877, -0.3923, -1.7997,
            -0.6399,  0.5264, -0.5437, -0.6345,  1.094 ,  0.9612, -0.5611,
            0.0504};

    private int[] widths = {1,  2,  3,  4,  5,  6,  7,  8,  9, 10};

    @Test
    public void testRickerWavelet(){
        Wavelet wR = new Wavelet(this.signal, this.widths);
        Complex[][] out_cplx = wR.cwt();

        double[][] result = {
                {0.8147 ,0.6726 ,-1.3093 ,-0.4463 ,1.4176 ,-0.0928 ,-1.3902 ,0.6026 ,1.1516 ,-1.0436 ,-0.7593 ,1.3472 ,0.2952 ,-1.3991 ,0.2916 ,1.3317 ,-0.7985 ,-1.1132 ,1.0574 ,0.5064 ,-1.4529 ,-0.0841 ,1.5219 ,-0.2465 ,-1.0065 ,1.1382 ,1.0363 ,-1.2944 ,-0.6678 ,1.05 ,-0.5047 ,-1.7215 ,0.4632 ,1.2609 ,-0.7069 ,-0.292 ,1.8039 ,0.6035 ,-1.3261 ,0.1223 ,0.9933 ,-1.1812 ,-1.4113 ,0.9311 ,0.5677 ,-1.2604 ,0.1376 ,1.6885 ,-0.035 ,-0.8364},
                {0.4576 ,0.1542 ,-0.2044 ,-0.198 ,-0.0341 ,-0.061 ,-0.1071 ,0.0125 ,0.0562 ,-0.0396 ,0.0087 ,0.157 ,0.1191 ,0.0153 ,0.0524 ,0.0093 ,-0.2339 ,-0.3676 ,-0.3052 ,-0.2834 ,-0.2074 ,0.1623 ,0.5885 ,0.7672 ,0.8228 ,0.7782 ,0.3448 ,-0.3907 ,-0.9798 ,-1.3244 ,-1.4952 ,-1.2242 ,-0.4061 ,0.5114 ,1.1972 ,1.6897 ,1.8041 ,1.2687 ,0.3702 ,-0.4247 ,-1.076 ,-1.532 ,-1.4574 ,-0.8853 ,-0.2596 ,0.3053 ,0.8895 ,1.138 ,0.714 ,0.0026},
                {0.2821 ,0.1969 ,0.0581 ,-0.068 ,-0.1379 ,-0.1463 ,-0.1122 ,-0.0578 ,0.0021 ,0.0596 ,0.1062 ,0.1286 ,0.1103 ,0.0385 ,-0.0866 ,-0.2453 ,-0.3956 ,-0.4795 ,-0.4393 ,-0.2398 ,0.1107 ,0.5477 ,0.9554 ,1.1936 ,1.1408 ,0.7412 ,0.0394 ,-0.8129 ,-1.5878 ,-2.0442 ,-2.0054 ,-1.4245 ,-0.4142 ,0.774 ,1.8196 ,2.4296 ,2.4298 ,1.82 ,0.7752 ,-0.4101 ,-1.4132 ,-1.9796 ,-1.9931 ,-1.5025 ,-0.6994 ,0.1472 ,0.7798 ,1.0411 ,0.9285 ,0.5804},
                {0.2238 ,0.1826 ,0.1095 ,0.027 ,-0.0416 ,-0.0795 ,-0.0814 ,-0.0532 ,-0.0092 ,0.0319 ,0.0513 ,0.0342 ,-0.026 ,-0.1243 ,-0.2409 ,-0.3427 ,-0.3885 ,-0.3396 ,-0.1737 ,0.102 ,0.443 ,0.7708 ,0.9873 ,1.001 ,0.7574 ,0.2647 ,-0.3954 ,-1.0778 ,-1.6064 ,-1.821 ,-1.6265 ,-1.0281 ,-0.1403 ,0.8366 ,1.667 ,2.144 ,2.1472 ,1.6777 ,0.8577 ,-0.1047 ,-0.9745 ,-1.5548 ,-1.7382 ,-1.5292 ,-1.0322 ,-0.4114 ,0.1633 ,0.5657 ,0.7418 ,0.7108},
                {0.1934 ,0.1735 ,0.1363 ,0.0905 ,0.0456 ,0.0092 ,-0.0151 ,-0.029 ,-0.0387 ,-0.0523 ,-0.0773 ,-0.1168 ,-0.1672 ,-0.2171 ,-0.249 ,-0.2426 ,-0.181 ,-0.0572 ,0.1204 ,0.3251 ,0.5145 ,0.6374 ,0.6464 ,0.5115 ,0.2326 ,-0.1543 ,-0.5795 ,-0.9518 ,-1.1785 ,-1.1893 ,-0.9568 ,-0.5079 ,0.0779 ,0.6841 ,1.1834 ,1.4683 ,1.4772 ,1.2098 ,0.7265 ,0.133 ,-0.4465 ,-0.899 ,-1.1485 ,-1.1698 ,-0.9891 ,-0.6715 ,-0.3004 ,0.0445 ,0.3048 ,0.4521},
                {0.1831 ,0.1733 ,0.1523 ,0.123 ,0.0865 ,0.0466 ,0.0071 ,-0.0322 ,-0.072 ,-0.1097 ,-0.1428 ,-0.1696 ,-0.1846 ,-0.179 ,-0.1479 ,-0.0896 ,-0.0042 ,0.1014 ,0.2101 ,0.3011 ,0.3543 ,0.3495 ,0.2729 ,0.1267 ,-0.0717 ,-0.2941 ,-0.4992 ,-0.6461 ,-0.6975 ,-0.6302 ,-0.4456 ,-0.1684 ,0.1597 ,0.4827 ,0.7406 ,0.886 ,0.8937 ,0.7611 ,0.5113 ,0.1911 ,-0.1423 ,-0.4357 ,-0.6452 ,-0.7432 ,-0.727 ,-0.6151 ,-0.437 ,-0.2286 ,-0.028 ,0.136},
                {0.1752 ,0.1593 ,0.1404 ,0.1198 ,0.0851 ,0.0439 ,0.011 ,-0.0225 ,-0.0631 ,-0.0947 ,-0.1106 ,-0.1226 ,-0.1253 ,-0.1025 ,-0.0616 ,-0.0168 ,0.0375 ,0.0997 ,0.1452 ,0.1621 ,0.1573 ,0.123 ,0.047 ,-0.054 ,-0.1566 ,-0.2567 ,-0.3275 ,-0.3663 ,-0.3567 ,-0.2824 ,-0.1589 ,-0.0098 ,0.1573 ,0.3213 ,0.4427 ,0.5038 ,0.5075 ,0.4457 ,0.3163 ,0.1488 ,-0.0257 ,-0.1963 ,-0.3427 ,-0.4334 ,-0.4637 ,-0.4478 ,-0.3853 ,-0.2798 ,-0.1605 ,-0.0501},
                {0.1581 ,0.1214 ,0.1018 ,0.0995 ,0.0707 ,0.0365 ,0.0349 ,0.0295 ,-0.0067 ,-0.0295 ,-0.0287 ,-0.0488 ,-0.077 ,-0.0657 ,-0.0389 ,-0.0331 ,-0.0139 ,0.0323 ,0.0521 ,0.0365 ,0.0292 ,0.0157 ,-0.0421 ,-0.107 ,-0.14 ,-0.1741 ,-0.1733 ,-0.1764 ,-0.1663 ,-0.1025 ,-0.0198 ,0.0437 ,0.12 ,0.2131 ,0.2658 ,0.2733 ,0.2774 ,0.2572 ,0.1779 ,0.0814 ,0.0033 ,-0.0899 ,-0.1961 ,-0.2583 ,-0.2788 ,-0.2989 ,-0.2937 ,-0.2327 ,-0.1616 ,-0.1101},
                {0.1334 ,0.0688 ,0.0529 ,0.0815 ,0.0633 ,0.0405 ,0.0836 ,0.112 ,0.0701 ,0.0455 ,0.0543 ,0.0054 ,-0.0708 ,-0.0771 ,-0.0619 ,-0.0922 ,-0.0911 ,-0.0277 ,-0.0053 ,-0.0341 ,-0.0226 ,-0.0038 ,-0.057 ,-0.1117 ,-0.1016 ,-0.1073 ,-0.0652 ,-0.0643 ,-0.0779 ,-0.0212 ,0.0439 ,0.0493 ,0.0737 ,0.146 ,0.1664 ,0.1348 ,0.1441 ,0.1559 ,0.0912 ,0.0211 ,0.0044 ,-0.043 ,-0.1369 ,-0.175 ,-0.1672 ,-0.2008 ,-0.2253 ,-0.1687 ,-0.1112 ,-0.1037},
                {0.1077 ,0.0162 ,0.0089 ,0.0734 ,0.0669 ,0.0552 ,0.1424 ,0.199 ,0.1412 ,0.1061 ,0.1159 ,0.0312 ,-0.0956 ,-0.1134 ,-0.0996 ,-0.1542 ,-0.1551 ,-0.0574 ,-0.0212 ,-0.0578 ,-0.0258 ,0.0196 ,-0.0439 ,-0.1062 ,-0.0708 ,-0.0674 ,0.0018 ,-0.0032 ,-0.0455 ,0.0095 ,0.0719 ,0.0371 ,0.0304 ,0.1049 ,0.1116 ,0.0498 ,0.0662 ,0.1053 ,0.0407 ,-0.024 ,0.0006 ,-0.0193 ,-0.1179 ,-0.1412 ,-0.1039 ,-0.1446 ,-0.1879 ,-0.1182 ,-0.0546 ,-0.0756}
        };

        double[][] out = new double[result.length][result[0].length];
        for (int i=0; i<out_cplx.length; i++) {
            for (int j=0; j<out_cplx[0].length; j++) {
                out[i][j] = out_cplx[i][j].getReal();
            }
        }

        for (int i=0; i<result.length; i++) {
            Assertions.assertArrayEquals(result[i], out[i], 0.001);
        }
    }

    @Test
    public void testMorletWavelet() {
        Wavelet wR = new Wavelet(this.signal, this.widths);
        Complex[][] out_cplx = wR.cwt(5.0);

        double[][][] result = {
                {{ -0.5775 ,  -0.3551 }, { -0.4924 ,  0.6865 }, { 0.7473 ,  0.402 }, { 0.2627 ,  -0.7942 }, { -0.8352 ,  -0.1035 }, { 0.0572 ,  0.8351 }, { 0.8225 ,  -0.2095 }, { -0.3574 ,  -0.7612 }, { -0.6862 ,  0.4837 }, { 0.605 ,  0.5623 }, { 0.4323 ,  -0.7154 }, { -0.8135 ,  -0.3114 }, { -0.1873 ,  0.8293 }, { 0.8269 ,  0.0236 }, { -0.1501 ,  -0.7821 }, { -0.7379 ,  0.356 }, { 0.5441 ,  0.7486 }, { 0.7405 ,  -0.5553 }, { -0.5552 ,  -0.5191 }, { -0.2731 ,  0.674 }, { 0.8131 ,  0.0765 }, { -0.081 ,  -0.9873 }, { -1.1064 ,  -0.0235 }, { -0.1011 ,  0.7438 }, { 0.3703 ,  -0.3362 }, { -0.8016 ,  -0.4478 }, { -0.5843 ,  0.9406 }, { 0.9784 ,  0.7277 }, { 0.7734 ,  -0.5374 }, { -0.1494 ,  -0.0047 }, { 0.7496 ,  0.7227 }, { 1.328 ,  -0.5256 }, { -0.1978 ,  -1.2083 }, { -0.9426 ,  0.0257 }, { -0.0196 ,  0.2242 }, { -0.4041 ,  -0.8349 }, { -1.6422 ,  -0.179 }, { -0.7937 ,  1.1697 }, { 0.5857 ,  0.4658 }, { 0.0036 ,  -0.3699 }, { -0.2757 ,  0.6255 }, { 1.1493 ,  0.818 }, { 1.3046 ,  -0.6726 }, { -0.1711 ,  -0.7495 }, { -0.1216 ,  0.4318 }, { 0.7724 ,  -0.0883 }, { -0.2101 ,  -1.0312 }, { -1.2085 ,  0.0364 }, { -0.1368 ,  0.8448 }, { 0.3882 ,  -0.0241 }},
                {{ -0.0446 ,  -0.5392 }, { 0.49 ,  0.2922 }, { -0.4377 ,  0.292 }, { -0.1445 ,  -0.4526 }, { 0.4476 ,  -0.0522 }, { -0.0294 ,  0.4446 }, { -0.43 ,  -0.1109 }, { 0.1891 ,  -0.4024 }, { 0.3592 ,  0.2614 }, { -0.3237 ,  0.3044 }, { -0.2379 ,  -0.3755 }, { 0.4128 ,  -0.1637 }, { 0.0832 ,  0.4368 }, { -0.444 ,  -0.0 }, { 0.0832 ,  -0.4369 }, { 0.4129 ,  0.1637 }, { -0.2379 ,  0.3756 }, { -0.3237 ,  -0.3043 }, { 0.3591 ,  -0.2613 }, { 0.1889 ,  0.4024 }, { -0.4302 ,  0.1106 }, { -0.028 ,  -0.444 }, { 0.4405 ,  0.0555 }, { -0.1371 ,  0.4227 }, { -0.3888 ,  -0.2144 }, { 0.2834 ,  -0.3426 }, { 0.2833 ,  0.3429 }, { -0.3889 ,  0.2147 }, { -0.1373 ,  -0.4225 }, { 0.4401 ,  -0.0554 }, { -0.0284 ,  0.4439 }, { -0.4305 ,  -0.1109 }, { 0.1888 ,  -0.4029 }, { 0.3593 ,  0.2608 }, { -0.3233 ,  0.304 }, { -0.2373 ,  -0.3757 }, { 0.4134 ,  -0.1635 }, { 0.0836 ,  0.4373 }, { -0.4439 ,  0.0006 }, { 0.0829 ,  -0.4363 }, { 0.4123 ,  0.164 }, { -0.2384 ,  0.3754 }, { -0.324 ,  -0.3047 }, { 0.3585 ,  -0.2619 }, { 0.1917 ,  0.4004 }, { -0.4347 ,  0.1229 }, { -0.0406 ,  -0.4894 }, { 0.546 ,  0.1308 }, { -0.4104 ,  0.4445 }, { -0.079 ,  -0.5442 }},
                {{ 0.722 ,  -0.5626 }, { 0.5657 ,  0.9629 }, { -1.1867 ,  0.49 }, { -0.3374 ,  -1.3656 }, { 1.4811 ,  -0.1228 }, { -0.1318 ,  1.5257 }, { -1.5005 ,  -0.4036 }, { 0.6729 ,  -1.4114 }, { 1.2661 ,  0.9238 }, { -1.1442 ,  1.073 }, { -0.8405 ,  -1.3247 }, { 1.4585 ,  -0.5776 }, { 0.2939 ,  1.5407 }, { -1.5686 ,  -0.0004 }, { 0.2944 ,  -1.5413 }, { 1.4593 ,  0.5775 }, { -0.8399 ,  1.3251 }, { -1.1433 ,  -1.0729 }, { 1.2688 ,  -0.9209 }, { 0.6668 ,  1.4204 }, { -1.5213 ,  0.3902 }, { -0.1003 ,  -1.5668 }, { 1.5555 ,  0.1944 }, { -0.4842 ,  1.4893 }, { -1.3725 ,  -0.7579 }, { 1.0034 ,  -1.2092 }, { 1.0034 ,  1.2105 }, { -1.3728 ,  0.7595 }, { -0.4854 ,  -1.4874 }, { 1.5531 ,  -0.193 }, { -0.1037 ,  1.5668 }, { -1.5246 ,  -0.3923 }, { 0.6648 ,  -1.4244 }, { 1.2694 ,  0.9161 }, { -1.1399 ,  1.0691 }, { -0.8347 ,  -1.3264 }, { 1.4645 ,  -0.5757 }, { 0.2977 ,  1.5458 }, { -1.5685 ,  0.006 }, { 0.2905 ,  -1.536 }, { 1.4533 ,  0.5785 }, { -0.8423 ,  1.3232 }, { -1.1472 ,  -1.0679 }, { 1.2446 ,  -0.9299 }, { 0.6826 ,  1.3625 }, { -1.4107 ,  0.4252 }, { -0.1831 ,  -1.3785 }, { 1.2626 ,  0.0184 }, { -0.1602 ,  1.0739 }, { -0.8401 ,  -0.2345 }},
                {{ 0.5158 ,  0.1523 }, { -0.0629 ,  0.5525 }, { -0.5404 ,  0.0152 }, { -0.0629 ,  -0.4908 }, { 0.4216 ,  -0.0723 }, { 0.0474 ,  0.3503 }, { -0.2878 ,  -0.0003 }, { 0.0573 ,  -0.2375 }, { 0.197 ,  0.1123 }, { -0.1583 ,  0.1614 }, { -0.1255 ,  -0.1925 }, { 0.2152 ,  -0.0859 }, { 0.0419 ,  0.2288 }, { -0.2355 ,  -0.004 }, { 0.0477 ,  -0.235 }, { 0.225 ,  0.0866 }, { -0.1212 ,  0.2027 }, { -0.1691 ,  -0.155 }, { 0.1897 ,  -0.1301 }, { 0.0931 ,  0.2213 }, { -0.2412 ,  0.0607 }, { -0.0277 ,  -0.2423 }, { 0.2268 ,  0.0152 }, { -0.0707 ,  0.2064 }, { -0.193 ,  -0.1293 }, { 0.1734 ,  -0.1869 }, { 0.1742 ,  0.1924 }, { -0.1927 ,  0.1378 }, { -0.0753 ,  -0.1947 }, { 0.2139 ,  -0.0048 }, { -0.0479 ,  0.2447 }, { -0.2626 ,  -0.0714 }, { 0.0798 ,  -0.2449 }, { 0.1922 ,  0.1005 }, { -0.1488 ,  0.1306 }, { -0.0892 ,  -0.2115 }, { 0.2571 ,  -0.0755 }, { 0.0686 ,  0.2623 }, { -0.2321 ,  0.0394 }, { 0.0235 ,  -0.1939 }, { 0.172 ,  0.1042 }, { -0.1758 ,  0.1675 }, { -0.1611 ,  -0.2261 }, { 0.2677 ,  -0.1362 }, { 0.0996 ,  0.3243 }, { -0.4045 ,  0.0806 }, { -0.109 ,  -0.4883 }, { 0.5367 ,  -0.1903 }, { 0.2985 ,  0.5173 }, { -0.425 ,  0.3904 }},
                {{ 0.2568 ,  0.102 }, { 0.0364 ,  0.263 }, { -0.1935 ,  0.1481 }, { -0.1967 ,  -0.0834 }, { -0.0213 ,  -0.1781 }, { 0.1154 ,  -0.0872 }, { 0.1044 ,  0.042 }, { 0.0151 ,  0.0839 }, { -0.0454 ,  0.0439 }, { -0.045 ,  -0.0078 }, { -0.0157 ,  -0.0272 }, { 0.0041 ,  -0.0192 }, { 0.0059 ,  -0.0098 }, { 0.006 ,  -0.0112 }, { 0.0157 ,  -0.0116 }, { 0.0257 ,  0.0002 }, { 0.0242 ,  0.0182 }, { 0.0116 ,  0.033 }, { -0.0098 ,  0.0406 }, { -0.0377 ,  0.0334 }, { -0.059 ,  0.005 }, { -0.0568 ,  -0.035 }, { -0.0291 ,  -0.0678 }, { 0.0153 ,  -0.0807 }, { 0.0656 ,  -0.0655 }, { 0.1024 ,  -0.0171 }, { 0.1017 ,  0.0508 }, { 0.0569 ,  0.1075 }, { -0.0152 ,  0.1282 }, { -0.0907 ,  0.1037 }, { -0.1427 ,  0.0352 }, { -0.1438 ,  -0.0575 }, { -0.086 ,  -0.1348 }, { 0.0075 ,  -0.1628 }, { 0.1008 ,  -0.1317 }, { 0.1614 ,  -0.0503 }, { 0.1612 ,  0.0555 }, { 0.0926 ,  0.1388 }, { -0.0102 ,  0.1557 }, { -0.0885 ,  0.105 }, { -0.1073 ,  0.033 }, { -0.0861 ,  -0.0087 }, { -0.0798 ,  -0.0171 }, { -0.1073 ,  -0.0523 }, { -0.0933 ,  -0.1581 }, { 0.0573 ,  -0.2486 }, { 0.2823 ,  -0.1536 }, { 0.3437 ,  0.1444 }, { 0.0975 ,  0.3908 }, { -0.2654 ,  0.3108 }},
                {{ 0.1963 ,  0.0601 }, { 0.0801 ,  0.182 }, { -0.0808 ,  0.1684 }, { -0.1646 ,  0.0432 }, { -0.1228 ,  -0.0873 }, { -0.0085 ,  -0.1296 }, { 0.0819 ,  -0.0733 }, { 0.0908 ,  0.0183 }, { 0.0328 ,  0.0727 }, { -0.0359 ,  0.0622 }, { -0.068 ,  0.0093 }, { -0.0524 ,  -0.045 }, { -0.0067 ,  -0.0718 }, { 0.0441 ,  -0.0634 }, { 0.0804 ,  -0.026 }, { 0.0901 ,  0.0282 }, { 0.0661 ,  0.0841 }, { 0.0088 ,  0.122 }, { -0.0698 ,  0.1215 }, { -0.1439 ,  0.0702 }, { -0.1801 ,  -0.0258 }, { -0.1517 ,  -0.1384 }, { -0.053 ,  -0.2238 }, { 0.0915 ,  -0.2387 }, { 0.2316 ,  -0.1604 }, { 0.308 ,  -0.0021 }, { 0.2771 ,  0.1864 }, { 0.133 ,  0.3337 }, { -0.0837 ,  0.374 }, { -0.2963 ,  0.2767 }, { -0.4203 ,  0.0642 }, { -0.3985 ,  -0.1915 }, { -0.2278 ,  -0.3944 }, { 0.0345 ,  -0.4636 }, { 0.2919 ,  -0.3683 }, { 0.4484 ,  -0.1427 }, { 0.4494 ,  0.1285 }, { 0.3021 ,  0.3491 }, { 0.0649 ,  0.4508 }, { -0.1838 ,  0.4123 }, { -0.3752 ,  0.2526 }, { -0.46 ,  0.0131 }, { -0.4045 ,  -0.2487 }, { -0.1993 ,  -0.4519 }, { 0.1108 ,  -0.5014 }, { 0.4077 ,  -0.3373 }, { 0.5368 ,  -0.0009 }, { 0.404 ,  0.3486 }, { 0.0643 ,  0.5143 }, { -0.2884 ,  0.3974 }},
                {{ 0.1682 ,  0.034 }, { 0.1016 ,  0.1317 }, { -0.0084 ,  0.1558 }, { -0.0978 ,  0.1018 }, { -0.1221 ,  0.0121 }, { -0.0827 ,  -0.0574 }, { -0.0194 ,  -0.0742 }, { 0.0226 ,  -0.0448 }, { 0.0216 ,  -0.0052 }, { -0.0095 ,  0.0071 }, { -0.035 ,  -0.0207 }, { -0.0223 ,  -0.0679 }, { 0.0352 ,  -0.0966 }, { 0.1129 ,  -0.075 }, { 0.1692 ,  0.0054 }, { 0.1641 ,  0.1224 }, { 0.0784 ,  0.2286 }, { -0.0731 ,  0.2702 }, { -0.2418 ,  0.2108 }, { -0.3608 ,  0.0483 }, { -0.369 ,  -0.1782 }, { -0.2353 ,  -0.3927 }, { 0.0205 ,  -0.5064 }, { 0.3239 ,  -0.4532 }, { 0.5665 ,  -0.2209 }, { 0.6448 ,  0.1354 }, { 0.5009 ,  0.5015 }, { 0.1555 ,  0.7408 }, { -0.2907 ,  0.7478 }, { -0.6865 ,  0.4926 }, { -0.8826 ,  0.04 }, { -0.7903 ,  -0.4652 }, { -0.4219 ,  -0.8464 }, { 0.1093 ,  -0.9628 }, { 0.6275 ,  -0.7625 }, { 0.9544 ,  -0.3024 }, { 0.9733 ,  0.2685 }, { 0.6719 ,  0.7592 }, { 0.1474 ,  1.003 }, { -0.4263 ,  0.9153 }, { -0.855 ,  0.5227 }, { -0.9886 ,  -0.0425 }, { -0.7783 ,  -0.5815 }, { -0.3012 ,  -0.8987 }, { 0.2625 ,  -0.8789 }, { 0.6963 ,  -0.5382 }, { 0.8352 ,  -0.0227 }, { 0.6409 ,  0.4509 }, { 0.221 ,  0.6913 }, { -0.2247 ,  0.6235 }},
                {{ 0.1696 ,  0.017 }, { 0.1287 ,  0.1088 }, { 0.0469 ,  0.16 }, { -0.043 ,  0.1575 }, { -0.1148 ,  0.1093 }, { -0.1492 ,  0.037 }, { -0.1425 ,  -0.0354 }, { -0.1095 ,  -0.0928 }, { -0.0643 ,  -0.1333 }, { -0.0061 ,  -0.1586 }, { 0.0677 ,  -0.1639 }, { 0.1493 ,  -0.1366 }, { 0.224 ,  -0.0636 }, { 0.2663 ,  0.059 }, { 0.2382 ,  0.2133 }, { 0.1133 ,  0.3529 }, { -0.0953 ,  0.4164 }, { -0.3357 ,  0.3523 }, { -0.5312 ,  0.1438 }, { -0.5947 ,  -0.1744 }, { -0.462 ,  -0.513 }, { -0.1356 ,  -0.7514 }, { 0.3054 ,  -0.7813 }, { 0.7298 ,  -0.5504 }, { 0.9872 ,  -0.0909 }, { 0.9549 ,  0.4759 }, { 0.6019 ,  0.9704 }, { 0.0002 ,  1.2124 }, { -0.6751 ,  1.0872 }, { -1.2008 ,  0.5966 }, { -1.3899 ,  -0.1305 }, { -1.1535 ,  -0.8742 }, { -0.5342 ,  -1.3906 }, { 0.2891 ,  -1.4957 }, { 1.0532 ,  -1.1349 }, { 1.5079 ,  -0.4095 }, { 1.5022 ,  0.4553 }, { 1.0287 ,  1.1824 }, { 0.2357 ,  1.5348 }, { -0.6137 ,  1.4004 }, { -1.2401 ,  0.8333 }, { -1.4502 ,  0.032 }, { -1.1936 ,  -0.7317 }, { -0.5767 ,  -1.208 }, { 0.1698 ,  -1.2579 }, { 0.7822 ,  -0.9009 }, { 1.0703 ,  -0.2979 }, { 0.9766 ,  0.32 }, { 0.5793 ,  0.7411 }, { 0.0574 ,  0.8488 }},
                {{ 0.1794 ,  0.0366 }, { 0.1418 ,  0.1247 }, { 0.0576 ,  0.188 }, { -0.0538 ,  0.2045 }, { -0.1592 ,  0.1548 }, { -0.2271 ,  0.0538 }, { -0.2394 ,  -0.0659 }, { -0.1875 ,  -0.1842 }, { -0.0733 ,  -0.2761 }, { 0.0815 ,  -0.3013 }, { 0.2402 ,  -0.2397 }, { 0.3628 ,  -0.1033 }, { 0.4092 ,  0.0909 }, { 0.344 ,  0.3125 }, { 0.1576 ,  0.4936 }, { -0.1201 ,  0.5597 }, { -0.4262 ,  0.4724 }, { -0.6747 ,  0.2252 }, { -0.7713 ,  -0.1546 }, { -0.6476 ,  -0.5753 }, { -0.2982 ,  -0.8984 }, { 0.2095 ,  -1.0061 }, { 0.7475 ,  -0.8333 }, { 1.1517 ,  -0.3757 }, { 1.2693 ,  0.2764 }, { 1.0213 ,  0.9369 }, { 0.4347 ,  1.4001 }, { -0.3498 ,  1.5084 }, { -1.1158 ,  1.1847 }, { -1.6273 ,  0.4747 }, { -1.7031 ,  -0.4311 }, { -1.289 ,  -1.2654 }, { -0.4825 ,  -1.7836 }, { 0.4966 ,  -1.8184 }, { 1.365 ,  -1.3296 }, { 1.8594 ,  -0.4498 }, { 1.8272 ,  0.5544 }, { 1.2807 ,  1.3917 }, { 0.3865 ,  1.8271 }, { -0.5881 ,  1.7339 }, { -1.3531 ,  1.1519 }, { -1.6919 ,  0.2853 }, { -1.5331 ,  -0.5922 }, { -0.9616 ,  -1.2343 }, { -0.1772 ,  -1.472 }, { 0.5704 ,  -1.2653 }, { 1.0633 ,  -0.7298 }, { 1.1892 ,  -0.0721 }, { 0.965 ,  0.5058 }, { 0.5085 ,  0.8517 }},
                {{ 0.1533 ,  0.0734 }, { 0.1105 ,  0.1519 }, { 0.0157 ,  0.195 }, { -0.1057 ,  0.1792 }, { -0.1963 ,  0.1022 }, { -0.2353 ,  -0.0174 }, { -0.2209 ,  -0.1531 }, { -0.1281 ,  -0.2686 }, { 0.0406 ,  -0.319 }, { 0.2228 ,  -0.2746 }, { 0.362 ,  -0.135 }, { 0.4318 ,  0.0778 }, { 0.3879 ,  0.3192 }, { 0.1962 ,  0.5189 }, { -0.1003 ,  0.6029 }, { -0.417 ,  0.5254 }, { -0.6848 ,  0.2778 }, { -0.8217 ,  -0.106 }, { -0.7354 ,  -0.5401 }, { -0.4098 ,  -0.901 }, { 0.0784 ,  -1.0714 }, { 0.625 ,  -0.9737 }, { 1.1029 ,  -0.5892 }, { 1.3473 ,  0.0196 }, { 1.2411 ,  0.7077 }, { 0.791 ,  1.2898 }, { 0.0668 ,  1.59 }, { -0.7372 ,  1.4955 }, { -1.4148 ,  0.9989 }, { -1.7903 ,  0.2 }, { -1.723 ,  -0.7094 }, { -1.1885 ,  -1.4855 }, { -0.3289 ,  -1.9095 }, { 0.6305 ,  -1.8585 }, { 1.4597 ,  -1.3339 }, { 1.9348 ,  -0.4628 }, { 1.9054 ,  0.5249 }, { 1.3924 ,  1.3636 }, { 0.5584 ,  1.8382 }, { -0.3852 ,  1.839 }, { -1.2007 ,  1.3814 }, { -1.6619 ,  0.6062 }, { -1.6665 ,  -0.2607 }, { -1.2702 ,  -0.9878 }, { -0.6072 ,  -1.4042 }, { 0.1465 ,  -1.4322 }, { 0.7763 ,  -1.1031 }, { 1.1183 ,  -0.5476 }, { 1.1395 ,  0.0585 }, { 0.8918 ,  0.5565 }}
        };

        double[][][] out = new double[result.length][result[0].length][2];
        for (int i=0; i<out_cplx.length; i++) {
            for (int j=0; j<out_cplx[0].length; j++) {
                out[i][j][0] = out_cplx[i][j].getReal();
                out[i][j][1] = out_cplx[i][j].getImaginary();
            }
        }

        for (int i=0; i<result.length; i++) {
            for (int j=0; j<result[0].length; j++) {
                Assertions.assertArrayEquals(result[i][j], out[i][j], 0.001);
            }
        }

    }

}
