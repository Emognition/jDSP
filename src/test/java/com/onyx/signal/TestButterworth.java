package com.onyx.signal;

import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.*;

public class TestButterworth {

    // 5Hz Sine + 15Hz Sine + 30Hz Sine sampled @ 100Hz with Nyquist of 50Hz
    private double[] signal = {0.0, 2.069, 0.951, 0.53, 1.314, 0.0, -0.588, 1.706, 2.127, 0.167, -0.0, -0.167, -2.127,
            -1.706, 0.588, 0.0, -1.314, -0.53, -0.951, -2.069, -0.0, 2.069, 0.951, 0.53, 1.314, 0.0, -0.588, 1.706,
            2.127, 0.167, -0.0,-0.167, -2.127, -1.706, 0.588, -0.0, -1.314, -0.53, -0.951, -2.069, -0.0, 2.069, 0.951,
            0.53, 1.314, 0.0,-0.588, 1.706, 2.127, 0.167, -0.0, -0.167, -2.127, -1.706, 0.588, 0.0, -1.314, -0.53,
            -0.951, -2.069, -0.0, 2.069, 0.951, 0.53, 1.314, 0.0, -0.588, 1.706, 2.127, 0.167, -0.0, -0.167, -2.127,
            -1.706, 0.588, 0.0, -1.314, -0.53, -0.951, -2.069, -0.0, 2.069, 0.951, 0.53, 1.314, 0.0, -0.588, 1.706,
            2.127, 0.167, -0.0, -0.167, -2.127, -1.706, 0.588, 0.0, -1.314, -0.53, -0.951, -2.069};

    private Butterworth flt = new Butterworth(this.signal, 100);
    @Test
    public void LowPassTest() {
        final double[] out = {0.0, 0.007, 0.049, 0.161, 0.35, 0.575, 0.774, 0.881, 0.879, 0.822, 0.779, 0.763, 0.726, 0.598,
                0.33, -0.049, -0.431, -0.713, -0.861, -0.901, -0.89, -0.867, -0.805, -0.633, -0.325, 0.071, 0.461,
                0.747, 0.881, 0.905, 0.891, 0.862, 0.792, 0.624, 0.324, -0.075, -0.463, -0.741, -0.878, -0.907, -0.887,
                -0.859, -0.795, -0.625, -0.32, 0.072, 0.46, 0.745, 0.879, 0.903, 0.889, 0.862, 0.792, 0.625, 0.324,
                -0.074, -0.463, -0.741, -0.879, -0.907, -0.887, -0.859, -0.795, -0.625, -0.32, 0.072, 0.46, 0.745,
                0.879, 0.903, 0.889, 0.862, 0.792, 0.625, 0.324, -0.074, -0.463, -0.741, -0.879, -0.907, -0.887, -0.859,
                -0.795, -0.625, -0.32, 0.072, 0.46, 0.745, 0.879, 0.903, 0.889, 0.862, 0.792, 0.625, 0.324, -0.074,
                -0.463, -0.741, -0.879, -0.907};

        double[] result = flt.low_pass_filter(4, 9);
        assertArrayEquals(out, result, 0.001);
    }

    @Test
    public void HighPassTest() {
        final double[] out = {0.0, 0.112, -0.468, 0.721, -0.364, -0.356, 0.688, -0.217, -0.6, 0.651, 0.227, -0.773,
                0.269, 0.579, -0.677, -0.178, 0.812, -0.282, -0.609, 0.651, 0.167, -0.793, 0.318, 0.629, -0.663, -0.2,
                0.766, -0.316, -0.6, 0.696, 0.21, -0.788, 0.282, 0.581, -0.684, -0.177, 0.814, -0.284, -0.61, 0.651,
                0.167, -0.793, 0.318, 0.629, -0.663, -0.2, 0.766, -0.316, -0.6, 0.696, 0.21, -0.788, 0.282, 0.581,
                -0.684, -0.177, 0.814, -0.284, -0.61, 0.651, 0.167, -0.793, 0.318, 0.629, -0.663, -0.2, 0.766, -0.316,
                -0.6, 0.696, 0.21, -0.788, 0.282, 0.581, -0.684, -0.177, 0.814, -0.284, -0.61, 0.651, 0.167, -0.793,
                0.318, 0.629, -0.663, -0.2, 0.766, -0.316,-0.6, 0.696, 0.21, -0.788, 0.282, 0.581, -0.684, -0.177,
                0.814, -0.284, -0.61, 0.651};

        double[] result = flt.high_pass_filter(4, 29);
        assertArrayEquals(out, result, 0.001);
    }

    @Test
    public void BandPassTest() {

    }

    @Test
    public void BandStopTest() {

    }
}
